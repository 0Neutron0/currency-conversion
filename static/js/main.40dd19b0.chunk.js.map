{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/WindowError/WindowError.js","components/Layout/Layout.js","redux/actionsTypes.js","redux/actions/actions.js","components/currencyName.js","components/BaseCurrency/BaseCurrency.js","components/CurrenciesList/CurrenciesList.js","pages/HomePage.js","components/CurrencySelect/CurrencySelect.js","components/Сonverter/Сonverter.js","pages/ConverterPage.js","pages/AboutPage.js","pages/NotFoundPage.js","pages/Error.js","App.js","reportWebVitals.js","redux/sagas/workers/functions/getData.js","redux/tokens.js","redux/sagas/workers/getAllCurrencies.js","redux/sagas/workers/changeCurrency.js","redux/sagas/workers/changeSecondValue.js","redux/sagas/rootSaga.js","redux/reducers/errorReducer.js","redux/reducers/currenciesReducer.js","redux/reducers/converterReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Header","activeLink","isActive","className","to","Footer","Date","getFullYear","WindowError","href","onClick","window","location","reload","Layout","apiError","useSelector","state","errorReducer","apiStatus","CURRENCIES","SET_CURRENCIES","SET_DATE","SET_BASE_CODE","SET_FIRST_CODE","SET_SECOND_CODE","SET_FIRST_VALUE","SET_SECOND_VALUE","CHANGE_FIRST_VALUE","CHANGE_SECOND_VALUE","ERROR","SERVER","API","changeFirstValue","currencyValue","type","payload","changeSecondValue","setErrorServer","text","setErrorApi","status","CURRENCIES_NAME","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","FOK","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KID","KMF","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STN","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VES","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","BaseCurrency","dispatch","useDispatch","useState","openState","changeOpenState","dateState","setDateState","currenciesReducer","src","origin","base","toLowerCase","alt","getDate","getMonth","minDate","maxDate","onChange","newDate","date","year","month","day","setDateCurrencis","value","CurrenciesList","changeCurrency","currencyCode","changeBaseCurrency","currenciesKeys","Object","keys","currencies","map","item","getCurrencis","HomePage","CurrencySelect","choiceCurrency","stateCurrentKeys","setCurrentKeys","currentKeys","useRef","useEffect","current","event","currentTarget","toUpperCase","trim","filter","key","includes","filtrCurrentKeys","placeholder","length","Converter","currency","converterReducer","typeCurrency","setTypeCurrency","changeCurency","firstCurrencyValue","min","required","firstCurrencyCode","codeCurrency","changeSecondCode","secondCurrencyValue","secondCurrencyCode","ConverterPage","AboutPage","target","rel","NotFoundPage","Error","info","App","newError","flag","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getData","url","a","fetch","request","data","json","API_KEY","getAllCurrencies","select","call","put","result","conversion_rates","base_code","amount","conversion_result","wotcherChangeDate","wotcherChangeBaseCurrency","wotcherChangeFirstCode","wotcherChangeSecondCode","wotcherChangeFirstValue","wotcherChangeSecondValue","roorSaga","takeLatest","debounce","all","fork","initState","apiText","actions","API_CLOSE","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40dd19b0.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport \"./Header.css\"\r\nconst Header = () => {\r\n\r\n    const activeLink = ({isActive}) => isActive ? \"header__link header__link--active\" : \"header__link\";\r\n    \r\n    return(\r\n        <header className=\"header\">\r\n            <nav className=\"header__menu\">\r\n                <NavLink className={activeLink} to=\"/currency-conversion/\">Курсы валют</NavLink>\r\n                <NavLink className={activeLink} to=\"/currency-conversion/converter\">Конвертер валют</NavLink>\r\n                <NavLink className={activeLink} to=\"/currency-conversion/about\">О нас</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport { Header } ;","import \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"footer\">{new Date().getFullYear()}.г</footer>\r\n    )\r\n};\r\n\r\nexport { Footer };","import \"./WindowError.css\";\r\n\r\nconst WindowError = () =>{\r\n    return(\r\n        <div className=\"modal-bg\">\r\n            <div className=\"window-error\">\r\n                <div className=\"window-error__content\">\r\n                    Ой, API сервера вернул ошибку.\r\n                    <p className=\"window-error__text\">\r\n                        Скорее всего, закончился двухнедельный демонстрационный ключ, но это не точно :)\r\n                    </p>\r\n                    <p className=\"window-error__text\">\r\n                        Получить новый, можно зарегестривовшись на сайте по ссылки \r\n                    <a \r\n                        className=\"window-error__link\"\r\n                        href=\"https://app.exchangerate-api.com/sign-up/29\"\r\n                    >\r\n                        exchangerate-api.com\r\n                    </a> \r\n                        и заменить его в файле /redux/tokens.js\r\n                    </p>\r\n                </div>        \r\n                <button \r\n                    className=\"window-error__btn\" \r\n                    onClick={() => window.location.reload()}\r\n                >\r\n                    Обновить страницу\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { WindowError };","import { useSelector } from \"react-redux\";\r\nimport { Outlet } from \"react-router\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { Footer } from \"../Footer/Footer\";\r\nimport { WindowError } from \"../WindowError/WindowError\";\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = () => {\r\n    const apiError = useSelector(state => state.errorReducer);\r\n    return(\r\n        <>\r\n            <div className=\"bg\"></div>\r\n            <div className=\"container\">\r\n                <Header />\r\n                <main className=\"content\">\r\n                    {\r\n                        apiError.apiStatus === 'success' ? <Outlet /> : <WindowError />\r\n                    }\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport { Layout };","export const CURRENCIES = {\r\n    SET_CURRENCIES: 'SET_CURRENCIES',\r\n    SET_DATE: 'SET_DATE',\r\n    SET_BASE_CODE: 'SET_BASE_CODE',\r\n    SET_FIRST_CODE: 'SET_FIRST_CODE',\r\n    SET_SECOND_CODE: 'SET_SECOND_CODE',\r\n    SET_FIRST_VALUE: 'SET_FIRST_VALUE',\r\n    SET_SECOND_VALUE: 'SET_SECOND_VALUE',\r\n    CHANGE_FIRST_VALUE: 'CHANGE_FIRST_VALUE',\r\n    CHANGE_SECOND_VALUE: 'CHANGE_SECOND_VALUE',\r\n};\r\n\r\nexport const ERROR = {\r\n    SERVER: 'SERVER',\r\n    API: 'API',\r\n};","import { ERROR, CURRENCIES } from \"../actionsTypes\";\r\n\r\n// Action Creators\r\nexport const setAllCurrencis = currencies => ({ type: CURRENCIES.SET_CURRENCIES, payload: {currencies: {...currencies.conversion_rates}, base: currencies.base_code}});\r\nexport const setDateCurrencis = date => ({ type: CURRENCIES.SET_DATE, payload: date});\r\nexport const changeBaseCurrency = currencyCode => ({type: CURRENCIES.SET_BASE_CODE, payload: currencyCode});\r\nexport const changeFirstCode = currencyCode => ({type: CURRENCIES.SET_FIRST_CODE, payload: currencyCode});\r\nexport const changeSecondCode = currencyCode => ({type: CURRENCIES.SET_SECOND_CODE, payload: currencyCode});\r\nexport const changeFirstValue = currencyValue => ({type: CURRENCIES.SET_FIRST_VALUE, payload: currencyValue});\r\nexport const changeSecondValue = currencyValue => ({type: CURRENCIES.SET_SECOND_VALUE, payload: currencyValue});\r\nexport const setFirstValue = amount => ({type: CURRENCIES.CHANGE_FIRST_VALUE, payload: amount});\r\nexport const setSecondValue = amount => ({type: CURRENCIES.CHANGE_SECOND_VALUE, payload: amount});\r\nexport const setErrorServer = text => ({type: ERROR.SERVER, payload: text});\r\nexport const setErrorApi = status => ({type: ERROR.API, payload: status});","const CURRENCIES_NAME = {\r\n    AED : 'Дирхам \\n(дирхам ОАЭ)',\r\n    AFN : 'Афгани',\r\n    ALL : 'Лек',\r\n    AMD : 'Драм \\n(армянский драм)',\r\n    ANG : 'Гульден \\n(нидерландский антильский гульден)',\r\n    AOA : 'Кванза',\r\n    ARS : 'Песо \\n(аргентинское песо)',\r\n    AUD : 'Доллар \\n(австралийский доллар)',\r\n    AWG : 'Флорин \\n(арубанский флорин)',\r\n    AZN : 'Манат \\n(азербайджанский манат)',\r\n    BAM : 'Марка \\n(конвертируемая марка)',\r\n    BBD : 'Доллар \\n(барбадосский доллар)',\r\n    BDT : 'Така',\r\n    BGN : 'Лев \\n(болгарский лев)',\r\n    BHD : 'Динар \\n(бахрейнский динар)',\r\n    BIF : 'Франк \\n(бурундийский франк)',\r\n    BMD : 'Доллар \\n(бермудский доллар)',\r\n    BND : 'Доллар \\n(брунейский доллар)',\r\n    BOB : 'Боливиано',\r\n    BRL : 'Реал \\n(бразильский реал)',\r\n    BSD : 'Доллар \\n(багамский доллар)',\r\n    BTN : 'Нгултрум',\r\n    BWP : 'Пула',\r\n    BYN : 'Рубль \\n(белорусский рубль)',\r\n    BZD : 'Доллар \\n(белизский доллар)',\r\n    CAD : 'Доллар \\n(канадский доллар)',\r\n    CDF : 'Франк \\n(конголезский франк)',\r\n    CHF : 'Франк \\n(швейцарский франк)',\r\n    CLP : 'Песо \\n(чилийское песо)',\r\n    CNY : 'Юань',\r\n    COP : 'Песо \\n(колумбийское песо)',\r\n    CRC : 'Колон \\n(коста-риканский колон)',\r\n    CUC : 'Кубинское песо',\r\n    CUP : 'Песо \\n(кубинское песо)',\r\n    CVE : 'Эскудо \\n(эскудо Кабо-Верде)',\r\n    CZK : 'Крона \\n(чешская крона)',\r\n    DJF : 'Франк \\n(франк Джибути)',\r\n    DKK : 'Крона \\n(датская крона)',\r\n    DOP : 'Песо \\n(доминиканское песо)',\r\n    DZD : 'Динар \\n(алжирский динар)',\r\n    EGP : 'Фунт \\n(египетский фунт)',\r\n    ERN : 'Накфа',\r\n    ETB : 'Быр \\n(эфиопский быр)',\r\n    EUR : 'Евро',\r\n    FJD : 'Доллар \\n(доллар Фиджи)',\r\n    FKP : 'Фунт \\n(фунт Фолклендских островов)',\r\n    FOK : 'Крона \\n(фарерская)',\r\n    GBP : 'Фунт \\n(фунт стерлингов)',\r\n    GEL : 'Лари',\r\n    GGP : 'Фунт \\n(гернсийский)',\r\n    GHS : 'Седи \\n(ганский седи)',\r\n    GIP : 'Фунт \\n(гибралтарский фунт)',\r\n    GMD : 'Даласи',\r\n    GNF : 'Франк \\n(гвинейский франк)',\r\n    GTQ : 'Кетсаль',\r\n    GYD : 'Доллар \\n(гайанский доллар)',\r\n    HKD : 'Доллар \\n(гонконгский доллар)',\r\n    HNL : 'Лемпира',\r\n    HRK : 'Куна \\n(хорватская куна)',\r\n    HTG : 'Гурд',\r\n    HUF : 'Форинт',\r\n    IDR : 'Рупия \\n(индонезийская рупия)',\r\n    ILS : 'Шекель \\n(новый израильский шекель)',\r\n    IMP : 'Фунт \\n(Острова Мэн)',\r\n    INR : 'Рупия \\n(индийская рупия)',\r\n    IQD : 'Динар \\n(иракский динар)',\r\n    IRR : 'Риал \\n(иранский риал)',\r\n    ISK : 'Крона \\n(исландская крона)',\r\n    JMD : 'Доллар \\n(ямайский доллар)',\r\n    JOD : 'Динар \\n(иорданский динар)',\r\n    JPY : 'Иена',\r\n    KES : 'Шиллинг \\n(кенийский шиллинг)',\r\n    KGS : 'Сом',\r\n    KHR : 'Риель',\r\n    KID : 'Доллар Кирибати',\r\n    KMF : 'Франк \\n(франк Комор)',\r\n    KRW : 'Вона \\n(южнокорейская вона)',\r\n    KWD : 'Динар \\n(кувейтский динар)',\r\n    KYD : 'Доллар \\n(доллар Островов Кайман)',\r\n    KZT : 'Тенге',\r\n    LAK : 'Кип',\r\n    LBP : 'Фунт \\n(ливанский фунт)',\r\n    LKR : 'Рупия \\n(шри-ланкийская рупия)',\r\n    LRD : 'Доллар \\n(либерийский доллар)',\r\n    LSL : 'Лоти \\n(мн. Малоти)',\r\n    LYD : 'Динар \\n(ливийский динар)',\r\n    MAD : 'Дирхам \\n(марокканский дирхам)',\r\n    MDL : 'Лей \\n(молдавский лей)',\r\n    MGA : 'Ариари \\n(малагасийский ариари)',\r\n    MKD : 'Денар',\r\n    MMK : 'Кьят',\r\n    MNT : 'Тугрик',\r\n    MOP : 'Патака',\r\n    MRU : 'Угия',\r\n    MUR : 'Рупия \\n(маврикийская рупия)',\r\n    MVR : 'Руфия',\r\n    MWK : 'Квача',\r\n    MXN : 'Песо \\n(мексиканское песо)',\r\n    MYR : 'Ринггит \\n(малайзийский ринггит)',\r\n    MZN : 'Метикал \\n(мозамбикский метикал)',\r\n    NAD : 'Доллар \\n(доллар Намибии)',\r\n    NGN : 'Найра',\r\n    NIO : 'Кордоба \\n(золотая кордоба)',\r\n    NOK : 'Крона \\n(норвежская крона)',\r\n    NPR : 'Рупия \\n(непальская рупия)',\r\n    NZD : 'Доллар \\n(новозеландский доллар)',\r\n    OMR : 'Риал \\n(оманский риал)',\r\n    PAB : 'Бальбоа',\r\n    PEN : 'Соль \\n(новый соль)',\r\n    PGK : 'Кина',\r\n    PHP : 'Песо \\n(филиппинское песо)',\r\n    PKR : 'Рупия \\n(пакистанская рупия)',\r\n    PLN : 'Злотый',\r\n    PYG : 'Гуарани',\r\n    QAR : 'Риал \\n(катарский риал)',\r\n    RON : 'Лей \\n(румынский лей)',\r\n    RSD : 'Динар \\n(сербский динар)',\r\n    RUB : 'Рубль \\n(российский рубль)',\r\n    RWF : 'Франк \\n(франк Руанды)',\r\n    SAR : 'Риял \\n(саудовский риял)',\r\n    SBD : 'Доллар \\n(доллар Соломоновых Островов)',\r\n    SCR : 'Рупия \\n(сейшельская рупия)',\r\n    SDG : 'Фунт \\n(суданский фунт)',\r\n    SEK : 'Крона \\n(шведская крона)',\r\n    SGD : 'Доллар \\n(сингапурский доллар)',\r\n    SHP : 'Фунт \\n(фунт Святой Елены)',\r\n    SLL : 'Леоне',\r\n    SOS : 'Шиллинг \\n(сомалийский шиллинг)',\r\n    SRD : 'Доллар \\n(суринамский доллар)',\r\n    SSP : 'Фунт \\n(южносуданский фунт)',\r\n    STN : 'Добра',\r\n    SYP : 'Фунт \\n(сирийский фунт)',\r\n    SZL : 'Лилангени \\n(мн. Эмалангени)',\r\n    THB : 'Бат',\r\n    TJS : 'Сомони',\r\n    TMT : 'Манат \\n(новый туркменский манат)',\r\n    TND : 'Динар \\n(тунисский динар)',\r\n    TOP : 'Паанга',\r\n    TRY : 'Лира \\n(турецкая лира)',\r\n    TTD : 'Доллар \\n(доллар Тринидада и Тобаго)',\r\n    TVD : 'Доллар Тувалу',\r\n    TWD : 'Доллар \\n(новый тайваньский доллар)',\r\n    TZS : 'Шиллинг \\n(танзанийский шиллинг)',\r\n    UAH : 'Гривна',\r\n    UGX : 'Шиллинг \\n(угандийский шиллинг)',\r\n    USD : 'Доллар \\n(доллар США)',\r\n    UYU : 'Песо \\n(уругвайское песо)',\r\n    UZS : 'Сум \\n(узбекский сум)',\r\n    VES : 'Суверенный боливар',\r\n    VND : 'Донг',\r\n    VUV : 'Вату',\r\n    WST : 'Тала',\r\n    XAF : 'Франк \\n(франк КФА BEAC)',\r\n    XCD : 'Доллар \\n(восточно-карибский доллар)',\r\n    XDR : 'Международный валютный фонд \\n(МВФ)',\r\n    XOF : 'Франк \\n(франк КФА BCEAO)',\r\n    XPF : 'Франк \\n(франк КФП)',\r\n    YER : 'Риал \\n(йеменский риал)',\r\n    ZAR : 'Рэнд',\r\n    ZMW : 'Квача \\n(замбийская квача)'\r\n};\r\n\r\nexport { CURRENCIES_NAME };","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Calendar from \"react-calendar\";\r\nimport { setDateCurrencis } from \"../../redux/actions/actions\"\r\nimport { CURRENCIES_NAME } from \"../currencyName\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./BaseCurrency.css\";\r\n\r\nconst BaseCurrency = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [openState, changeOpenState] = useState('modal-calendar');\r\n    const [dateState, setDateState] = useState(new Date());\r\n\r\n    const changeDate = (newDate) => {\r\n        setDateState(newDate);\r\n        const date = {\r\n            year: newDate.getFullYear(), \r\n            month: newDate.getMonth(), \r\n            day: newDate.getDate()\r\n        };\r\n        dispatch(setDateCurrencis(date));\r\n        changeOpenState('modal-calendar');\r\n    };\r\n\r\n    const openCalendar = () => {\r\n        changeOpenState('modal-calendar modal-calendar--open');\r\n    };\r\n\r\n    const currenciesReducer = useSelector(state => state.currenciesReducer);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"cocoon\">\r\n                <div className=\"base-currency\">\r\n                    <div className=\"base-currency__column\">\r\n                        <img\r\n                            className=\"base-currency__flag\"\r\n                            src={window.location.origin + \"/currency-conversion/images/flags/\" + currenciesReducer.base.toLowerCase() + \".png\"}\r\n                            alt={currenciesReducer.base}  \r\n                        />\r\n                    </div>\r\n                    <div className=\"base-currency__column\">\r\n                        <div className=\"base-currency__title\">Базовая валюта: \r\n                            <p className=\"base-currency__name\">{CURRENCIES_NAME[currenciesReducer.base]}</p>\r\n                            <p className=\"base-currency__sub-title\">{currenciesReducer.base}</p>\r\n                        </div>\r\n                        <div className=\"base-currency__description\">\r\n                            Для смены базовой валюты кликните по нужной \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cocoon\">\r\n                <div \r\n                    className=\"calendar-btn\"\r\n                    onClick={openCalendar}\r\n                >\r\n                    <div className=\"calendar-btn__date\">{dateState.getDate() + '.' + (dateState.getMonth() + 1) + '.' + dateState.getFullYear()}</div>\r\n                    <div className=\"calendar-btn__icon\"></div>\r\n                </div>\r\n            </div>\r\n            <div className={openState}>\r\n                <Calendar\r\n                    minDate={new Date(2018, 0, 1)}\r\n                    maxDate={new Date()}\r\n                    onChange={changeDate}\r\n                    value={dateState}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default BaseCurrency;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeBaseCurrency } from \"../../redux/actions/actions\";\r\nimport { CURRENCIES_NAME } from \"../currencyName\";\r\nimport \"./CurrenciesList.css\";\r\n\r\nconst CurrenciesList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeCurrency = currencyCode => {\r\n        dispatch(changeBaseCurrency(currencyCode));\r\n    };\r\n\r\n    const currenciesReducer = useSelector(state => state.currenciesReducer);\r\n    const currenciesKeys = Object.keys(currenciesReducer.currencies);\r\n\r\n    const getCurrencis = (currencies, currenciesKeys) => {\r\n        return(\r\n            currenciesKeys.map(item => <div \r\n                    className=\"currencies-list__item\" \r\n                    key={item}\r\n                    onClick={() => changeCurrency(item)}\r\n                >\r\n                <div \r\n                    className=\"currencies-list__flag\"\r\n                >\r\n                    <img  \r\n                        className = \"currencies-list__flag-img\"\r\n                        src = {window.location.origin + \"/currency-conversion/images/flags/\" + item.toLowerCase() + \".png\"} \r\n                        alt = {item} \r\n                    />\r\n                </div>\r\n                <div className=\"currencies-list__info\">\r\n                    <div className=\"currencies-list__text\">\r\n                        Код: \r\n                        <span className=\"currencies-list__code\">{item}</span>\r\n                    </div> \r\n                    <div className=\"currencies-list__text\">\r\n                        Курс: \r\n                        <span className=\"currencies-list__code\">{currencies[item]}</span>\r\n                    </div>\r\n                    <div className=\"currencies-list__name\">{CURRENCIES_NAME[item]}</div>\r\n                </div>\r\n            </div>)\r\n        )\r\n    };\r\n\r\n    return(\r\n        <div className=\"currencies-list\">\r\n            { getCurrencis(currenciesReducer.currencies, currenciesKeys) }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CurrenciesList;","import BaseCurrency from \"../components/BaseCurrency/BaseCurrency\"\r\nimport CurrenciesList from \"../components/CurrenciesList/CurrenciesList\";\r\n\r\nconst HomePage = () => {\r\n    return(\r\n        <>\r\n            <BaseCurrency />\r\n            <CurrenciesList />\r\n        </>\r\n    )\r\n};\r\n\r\nexport { HomePage };","import { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CURRENCIES_NAME } from \"../currencyName\";\r\nimport \"./CurrencySelect.css\"\r\n\r\nconst CurrencySelect = ({choiceCurrency}) => {\r\n\r\n    const currenciesReducer = useSelector(state => state.currenciesReducer);\r\n    const [stateCurrentKeys, setCurrentKeys] = useState([]);\r\n    const currentKeys = useRef(null);\r\n    useEffect(() => {\r\n        currentKeys.current = Object.keys(currenciesReducer.currencies);\r\n        setCurrentKeys(currentKeys.current);\r\n    }, [currenciesReducer.currencies]);\r\n\r\n    const filtrCurrentKeys = (event) => {\r\n        const value = event.currentTarget.value.toUpperCase().trim();\r\n        if(value){\r\n            setCurrentKeys([...currentKeys.current.filter(key => key.includes(value))]);\r\n        }else{\r\n            setCurrentKeys([...currentKeys.current]);\r\n        }\r\n    };\r\n\r\n    const gerAllList = () => {\r\n        if(stateCurrentKeys.length){\r\n            return(\r\n                stateCurrentKeys.map(item => <div \r\n                            className=\"converter-select__item\"\r\n                            onClick={() => choiceCurrency(item)}\r\n                            key={item + \"_COL\"}\r\n                        >\r\n                        <div className=\"converter-select__flag\" >\r\n                            <img className=\"converter-select__img\"\r\n                                    src={window.location.origin + \"/currency-conversion/images/flags/\" + item.toLowerCase() + \".png\"}\r\n                                    alt={item}\r\n                            />\r\n                        </div>\r\n                        <div className=\"converter-select__info\">\r\n                            <div className=\"converter-select__code\">{item}</div>\r\n                            <div className=\"converter-select__name\">{CURRENCIES_NAME[item]}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"converter-select__no-code\">Код валюты не найден</div>\r\n            )\r\n        }\r\n\r\n    };\r\n\r\n    return(\r\n        <div className=\"converter-select\">\r\n        <input \r\n            className=\"converter-select__filtr\"\r\n            onChange={event => filtrCurrentKeys(event)}\r\n            placeholder=\"Введите код валюты\"\r\n        />\r\n        <div className=\"converter-select__items\">\r\n            {gerAllList()}\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport { CurrencySelect };","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFirstCode, changeSecondCode, changeFirstValue, changeSecondValue } from \"../../redux/actions/actions\";\r\nimport { CurrencySelect } from \"../CurrencySelect/CurrencySelect\";\r\nimport { CURRENCIES_NAME } from \"../currencyName\";\r\nimport \"./Converter.css\";\r\n\r\nconst Converter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const currency = useSelector(state => state.converterReducer);\r\n    const [typeCurrency, setTypeCurrency] = useState('first');\r\n\r\n    const [openState, changeOpenState] = useState(\"converter__list\");\r\n\r\n    const changeCurency = type => {\r\n        setTypeCurrency(type);\r\n        changeOpenState(\"converter__list converter__list--open\");\r\n    };\r\n\r\n    const choiceCurrency = codeCurrency => {\r\n        if(typeCurrency === 'first'){\r\n            dispatch(changeFirstCode(codeCurrency));\r\n        }else{\r\n            dispatch(changeSecondCode(codeCurrency));\r\n        }\r\n        changeOpenState(\"converter__list\");\r\n    };\r\n\r\n    const changeFirst = event => {\r\n        const value = event.currentTarget.value.trim();\r\n        if(+value > 0){\r\n            dispatch(changeFirstValue(value));\r\n        }else{\r\n            dispatch(changeFirstValue('1'));\r\n        }\r\n        \r\n    };\r\n\r\n    const changeSecond = event => {\r\n        const value = event.currentTarget.value.trim();\r\n        if(+value > 0){\r\n            dispatch(changeSecondValue(value));\r\n        }else{\r\n            dispatch(changeSecondValue('1'));\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"converter\">\r\n            <div className=\"converter__currency\">\r\n                <div className=\"converter__part\">\r\n                    <input \r\n                        className=\"converter__input\"\r\n                        onChange={changeFirst}\r\n                        type=\"number\"\r\n                        value={currency.firstCurrencyValue}\r\n                        min=\"1\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"converter__part\">\r\n                    <div \r\n                        onClick={() => changeCurency(\"first\")}\r\n                        className=\"converter__cocoon\"\r\n                    >\r\n                        <div className=\"converter__flag\">\r\n                            <img \r\n                                className=\"converter__img\"\r\n                                src={window.location.origin + \"/currency-conversion/images/flags/\" + currency.firstCurrencyCode.toLowerCase() + \".png\"}\r\n                                alt=\"fl\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"converter__currency-info\">\r\n                            <div className=\"converter__currency-code\">{currency.firstCurrencyCode}</div>\r\n                            <div className=\"converter__currency-name\">{CURRENCIES_NAME[currency.firstCurrencyCode]}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div  className={openState}>\r\n                <CurrencySelect choiceCurrency={choiceCurrency} />\r\n            </div>\r\n            <div className=\"converter__currency\">\r\n                <div className=\"converter__part\">\r\n                    <input \r\n                        className=\"converter__input\"\r\n                        onChange={changeSecond}\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={currency.secondCurrencyValue}\r\n                    />\r\n                </div>\r\n                <div className=\"converter__part\">\r\n                    <div \r\n                        onClick={() => changeCurency(\"second\")}\r\n                        className=\"converter__cocoon\"\r\n                    >\r\n                        <div className=\"converter__flag\">\r\n                            <img \r\n                                className=\"converter__img\"\r\n                                src={window.location.origin + \"/currency-conversion/images/flags/\" + currency.secondCurrencyCode.toLowerCase() + \".png\"}\r\n                                alt={currency.secondCurrencyCode.toLowerCase()}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"converter__currency-code\">{currency.secondCurrencyCode}</div>\r\n                            <div className=\"converter__currency-name\">{CURRENCIES_NAME[currency.secondCurrencyCode]}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Converter };","import { Converter } from \"../components/Сonverter/Сonverter\";\r\n\r\nconst ConverterPage = () => {\r\n    return(\r\n        <Converter />\r\n    )\r\n};\r\n\r\nexport { ConverterPage };","import \"./css/AboutPage.css\";\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <div className=\"about-info\">\r\n            <img className=\"about-info__logo\" src={window.location.origin + \"/currency-conversion/logo120.png\"} alt=\"logo\" />\r\n            <div className=\"adout-info__text\">\r\n                <p className=\"about-info__indent\">\r\n                    Привет, меня зовут Владимир. И это мой pet-проект.\r\n                </p>\r\n                <p className=\"about-info__indent\">\r\n                    Приложение показывает, актуальные цены валют на текущий момент, и можно посмотреть цены валют за выбранную дату. \r\n                    Также конвертирует валюты. Для получения актуальных курсов используется двухнедельный демонстрационный ключ Pro версии для доступа к API сервиса <a className=\"about-info__link\" href=\"https://www.exchangerate-api.com/\" target=\"_blank\" rel=\"noopener noreferrer\">exchangerate-api.com</a>\r\n                </p>\r\n                <p className=\"about-info__indent\">\r\n                    Если ключ истек, то можно заменить его на новый в файле: currency-conversion\\src\\redux\\tokens.js\r\n                    Получить новый демо ключ можно зарегистрировавшись бесплатно <a className=\"about-info__link\" href=\"https://app.exchangerate-api.com/sign-up/29\" target=\"_blank\" rel=\"noopener noreferrer\">тут</a>. \r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { AboutPage };","import \"./css/NotFoundPage.css\";\r\n\r\nconst NotFoundPage = () => {\r\n    return(\r\n        <div className=\"error-404\">\r\n            <div className=\"error-404__title\">Ошибка 404</div>\r\n            <div className=\"error-404__description\">Страница не найдена</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { NotFoundPage };","const Error = ({info}) =>{\r\n    return(\r\n        <div className=\"error\">\r\n            {info}\r\n            <button \r\n                className=\"error__btn\" \r\n                onClick={() => window.location.reload()}\r\n            >Обновить страницу</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Error };","import { useSelector } from \"react-redux\";\nimport { Routes, Route} from 'react-router';\nimport { Layout } from './components/Layout/Layout';\nimport { HomePage } from \"./pages/HomePage\";\nimport { ConverterPage } from \"./pages/ConverterPage\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { NotFoundPage } from \"./pages/NotFoundPage\";\nimport { Error } from './pages/Error';\nimport './App.css';\n\nfunction App() {\n  const newError = useSelector(state => state.errorReducer);\n  if(!newError.flag){\n    return (\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/currency-conversion/\" element={<Layout />}> \n              <Route index element={<HomePage />} />\n              <Route path=\"/currency-conversion/converter\" element={<ConverterPage />} />\n              <Route path=\"/currency-conversion/about\" element={<AboutPage />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n        </Routes>\n      </div>\n    );\n  }else{\n    return (\n      <div className=\"App\">\n      <Routes>\n        <Route path=\"/currency-conversion/\" element={<Error info={newError.text} />} />\n      </Routes>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export async function getData(url){\r\n    const request = await fetch(url);\r\n    const data = request.json();\r\n    return data;\r\n};\r\n","export const API_KEY = {\r\n    TOKEN: '890136691008513f4ac3f762' // Ключь достука к сервису https://app.exchangerate-api.com/\r\n};","import { put, call, select } from \"redux-saga/effects\";\r\nimport { getData } from \"./functions/getData\";\r\nimport { setAllCurrencis, setErrorServer, setErrorApi } from \"../../actions/actions\";\r\nimport { API_KEY } from \"../../tokens\";\r\n\r\nexport function* getAllCurrencies(){\r\n    try{\r\n        const state = yield select(state => state.currenciesReducer);\r\n        const url = `https://v6.exchangerate-api.com/v6/${API_KEY.TOKEN}/history/${state.base}/${state.year}/${state.month}/${state.day}`;\r\n        const data = yield call(getData, url);\r\n        yield put(setErrorApi(data.result));\r\n        yield put(setAllCurrencis(data));\r\n    }catch(e){\r\n        yield put(setErrorServer('Ой, API`шечка навернулась... \\nПри получении данных от сервера произошла ошибка!'));\r\n    }\r\n};","import { put, call, select } from \"redux-saga/effects\";\r\nimport { getData } from \"./functions/getData\";\r\nimport { setSecondValue, setErrorServer, setErrorApi } from \"../../actions/actions\";\r\nimport { API_KEY } from \"../../tokens\";\r\n\r\nexport function* changeCurrency(){\r\n    try{\r\n        const state = yield select(state => state.converterReducer);\r\n        const url = `https://v6.exchangerate-api.com/v6/${API_KEY.TOKEN}/pair/${state.firstCurrencyCode}/${state.secondCurrencyCode}/${state.firstCurrencyValue}`;\r\n        const data = yield call(getData, url);\r\n        yield put(setErrorApi(data.result));\r\n        yield put(setSecondValue(data.conversion_result));\r\n    }catch(e){\r\n        yield put(setErrorServer('Ой, API`шечка навернулась... \\nПри получении данных от сервера произошла ошибка!'));\r\n    }\r\n};","import { put, call, select } from \"redux-saga/effects\";\r\nimport { getData } from \"./functions/getData\";\r\nimport { setFirstValue, setErrorServer, setErrorApi } from \"../../actions/actions\";\r\nimport { API_KEY } from \"../../tokens\";\r\n\r\nexport function* changeSecondValue(){\r\n    try{\r\n        const state = yield select(state => state.converterReducer);\r\n        const url = `https://v6.exchangerate-api.com/v6/${API_KEY.TOKEN}/pair/${state.secondCurrencyCode}/${state.firstCurrencyCode}/${state.secondCurrencyValue}`;\r\n        const data = yield call(getData, url);\r\n        yield put(setErrorApi(data.result));\r\n        yield put(setFirstValue(data.conversion_result));\r\n    }catch(e){\r\n        yield put(setErrorServer('Ой, API`шечка навернулась... \\nПри получении данных от сервера произошла ошибка!'));\r\n    }\r\n};","import { fork, takeLatest, debounce, all } from \"redux-saga/effects\";\r\nimport { getAllCurrencies } from \"./workers/getAllCurrencies\";\r\nimport { changeCurrency } from \"./workers/changeCurrency\";\r\nimport { changeSecondValue } from \"./workers/changeSecondValue\";\r\nimport { CURRENCIES } from \"../actionsTypes\";\r\n\r\nexport function* wotcherChangeDate(){\r\n    yield takeLatest(CURRENCIES.SET_DATE, getAllCurrencies);\r\n};\r\n\r\nexport function* wotcherChangeBaseCurrency(){\r\n    yield takeLatest(CURRENCIES.SET_BASE_CODE, getAllCurrencies);\r\n};\r\n\r\nexport function* wotcherChangeFirstCode(){\r\n    yield takeLatest(CURRENCIES.SET_FIRST_CODE, changeCurrency);\r\n};\r\n\r\nexport function* wotcherChangeSecondCode(){\r\n    yield takeLatest(CURRENCIES.SET_SECOND_CODE, changeCurrency);\r\n};\r\n\r\nexport function* wotcherChangeFirstValue(){\r\n    yield debounce(500, CURRENCIES.SET_FIRST_VALUE, changeCurrency);\r\n};\r\n\r\nexport function* wotcherChangeSecondValue(){\r\n    yield debounce(500, CURRENCIES.SET_SECOND_VALUE, changeSecondValue);\r\n};\r\n\r\nexport default function* roorSaga(){\r\n    yield all ([\r\n        fork(getAllCurrencies),\r\n        fork(wotcherChangeDate),\r\n        fork(wotcherChangeBaseCurrency),\r\n        fork(changeCurrency),\r\n        fork(wotcherChangeFirstCode),\r\n        fork(wotcherChangeSecondCode),\r\n        fork(wotcherChangeFirstValue),\r\n        fork(wotcherChangeSecondValue),\r\n    ])\r\n};\r\n\r\n","import { ERROR } from \"../actionsTypes\";\r\n\r\nconst initState = {\r\n    flag: false,\r\n    text: 'error',\r\n    apiStatus: 'success',\r\n    apiText: 'error'\r\n};\r\n\r\nconst errorReducer = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case ERROR.SERVER:\r\n            return {...state, flag: true, text: actions.payload};\r\n        case ERROR.API:\r\n            return {...state, apiStatus: actions.payload};\r\n        case ERROR.API_CLOSE:\r\n            return {...state, apiStatus: 'success'};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default errorReducer;","import { CURRENCIES } from \"../actionsTypes\";\r\n\r\nconst date = new Date();\r\nconst initState = {\r\n    currencies: {},\r\n    year: date.getFullYear(),\r\n    month: date.getMonth() + 1,\r\n    day: date.getDate(),\r\n    base: 'USD'\r\n}\r\n\r\nconst currenciesReducer = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case CURRENCIES.SET_CURRENCIES:\r\n            return {...state, currencies: actions.payload.currencies, base: actions.payload.base};\r\n        case CURRENCIES.SET_DATE:\r\n            return {...state, year: actions.payload.year, month: actions.payload.month, day: actions.payload.day};\r\n        case CURRENCIES.SET_BASE_CODE:\r\n            return {...state, base: actions.payload};\r\n        case CURRENCIES.GET_LIST:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default currenciesReducer;","import { CURRENCIES } from \"../actionsTypes\";\r\n\r\nconst initState = {\r\n    firstCurrencyCode: \"USD\",\r\n    firstCurrencyValue: \"1\",\r\n    secondCurrencyCode: \"RUB\",\r\n    secondCurrencyValue: \"0\",\r\n}\r\n\r\nconst converterReducer = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case CURRENCIES.SET_FIRST_CODE:\r\n            return {...state, firstCurrencyCode: actions.payload};\r\n        case CURRENCIES.SET_SECOND_CODE:\r\n            return {...state, secondCurrencyCode: actions.payload};\r\n        case CURRENCIES.SET_FIRST_VALUE:\r\n            return {...state, firstCurrencyValue: actions.payload};\r\n        case CURRENCIES.SET_SECOND_VALUE:\r\n            return {...state, secondCurrencyValue: actions.payload};\r\n        case CURRENCIES.CHANGE_FIRST_VALUE:\r\n            return {...state, firstCurrencyValue: actions.payload};\r\n        case CURRENCIES.CHANGE_SECOND_VALUE:\r\n            return {...state, secondCurrencyValue: actions.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default converterReducer;","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport currenciesReducer from \"./currenciesReducer\";\r\nimport converterReducer from \"./converterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    errorReducer,\r\n    currenciesReducer,\r\n    converterReducer,\r\n});\r\n\r\nexport { rootReducer };","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootSaga from \"./sagas/rootSaga\";\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}